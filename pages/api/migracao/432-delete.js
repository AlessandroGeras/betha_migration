const sql = require('mssql');
const dotenv = require('dotenv');
const fetch = require('node-fetch');
const fs = require('fs');

dotenv.config();

async function connectToSqlServer() {
    try {
        const server = process.env.SERVER;
        const database = process.env.DATABASE;
        const username = process.env.USERNAME_SQLSERVER;
        const password = process.env.PASSWORD;

        const config = {
            user: username,
            password: password,
            server: server,
            database: database,
            options: {
                encrypt: false
            }
        };

        const pool = await sql.connect(config);
        console.log("Conectado ao SQL Server");
        return pool;
    } catch (error) {
        console.error('Erro ao conectar ao SQL Server:', error);
        throw error;
    }
}

async function logResponse(id, responseText) {
    const logMessage = `ID: ${id}\nResposta: ${responseText}\n\n`;
    fs.appendFileSync('delete_log.txt', logMessage, (err) => {
        if (err) {
            console.error('Erro ao gravar no log:', err);
        }
    });
}

async function main() {
    const idsParaExcluir = [
        38003022,
  38003023,
  38003024,
  38003025,
  38003026,
  38003027,
  38003028,
  38003029,
  38003030,
  38003031,
  38003032,
  38003033,
  38003034,
  38003035,
  38003036,
  38003037,
  38003038,
  38003039,
  38003040,
  38003041,
  38003042,
  38003043,
  38003044,
  38003045,
  38003046,
  38003047,
  38003048,
  38003049,
  38003050,
  38003051,
  38003052,
  38003053,
  38003054,
  38003055,
  38003056,
  38003057,
  38003058,
  38003059,
  38003060,
  38003061,
  38003062,
  38003063,
  38003064,
  38003065,
  38003066,
  38003067,
  38003068,
  38003069,
  38003070,
  38003071,
  38003072,
  38003073,
  38003074,
  38003075,
  38003076,
  38003077,
  38003078,
  38003079,
  38003080,
  38003081,
  38003082,
  38003083,
  38003084,
  38003085,
  38003086,
  38003087,
  38003088,
  38003089,
  38003090,
  38003091,
  38003092,
  38003093,
  38003094,
  38003095,
  38003096,
  38003097,
  38003098,
  38003099,
  38003100,
  38003101,
  38003102,
  38003103,
  38003104,
  38003105,
  38003106,
  38003107,
  38003108,
  38003109,
  38003110,
  38003111,
  38003112,
  38003113,
  38003114,
  38003115,
  38003116,
  38003117,
  38003118,
  38003119,
  38003120,
  38003121,
  38003122,
  38003123,
  38003124,
  38003125,
  38003126,
  38003127,
  38003128,
  38003129,
  38003130,
  38003131,
  38003132,
  38003133,
  38003134,
  38003135,
  38003136,
  38003137,
  38003138,
  38003139,
  38003140,
  38003141,
  38003142,
  38003143,
  38003144,
  38003145,
  38003146,
  38003147,
  38003148,
  38003149,
  38003150,
  38003151,
  38003152,
  38003153,
  38003154,
  38003155,
  38003156,
  38003157,
  38003158,
  38003159,
  38003160,
  38003161,
  38003162,
  38003163,
  38003164,
  38003165,
  38003166,
  38003167,
  38003168,
  38003169,
  38003170,
  38003171,
  38003172,
  38003173,
  38003174,
  38003175,
  38003176,
  38003177,
  38003178,
  38003179,
  38003180,
  38003181,
  38003182,
  38003183,
  38003184,
  38003185,
  38003186,
  38003187,
  38003188,
  38003189,
  38003190,
  38003191,
  38003192,
  38003193,
  38003194,
  38003195,
  38003196,
  38003197,
  38003198,
  38003199,
  38003200,
  38003201,
  38003202,
  38003203,
  38003204,
  38003205,
  38003206,
  38003207,
  38003208,
  38003209,
  38003210,
  38003211,
  38003212,
  38003213,
  38003214,
  38003215,
  38003216,
  38003217,
  38003218,
  38003219,
  38003220,
  38003221,
  38003222,
  38003223,
  38003224,
  38003225,
  38003226,
  38003227,
  38003228,
  38003229,
  38003230,
  38003231,
  38003232,
  38003233,
  38003234,
  38003235,
  38003236,
  38003237,
  38003238,
  38003239,
  38003240,
  38003241,
  38003242,
  38003243,
  38037200,
  38037201,
  38037202,
  38037203,
  38037204,
  38037205,
  38037206,
  38037207,
  38037208,
  38037209,
  38037210,
  38037211,
  38037212,
  38037213,
  38037214,
  38037215,
  38037216,
  38037217,
  38037218,
  38037219,
  38037220,
  38037221,
  38037222,
  38037223,
  38037224,
  38037225,
  38037226,
  38037227,
  38037228,
  38037229,
  38037230,
  38037231,
  38037232,
  38037233,
  38037234,
  38037235,
  38037236,
  38037237,
  38037238,
  38037239,
  38037240,
  38037241,
  38037242,
  38037243,
  38037244,
  38037245,
  38037246,
  38037247,
  38037248,
  38037249,
  38037250,
  38037251,
  38037252,
  38037253,
  38037254,
  38037255,
  38037256,
  38037257,
  38037258,
  38037259,
  38037260,
  38037261,
  38037262,
  38037263,
  38037264,
  38037265,
  38037266,
  38037267,
  38037268,
  38037269,
  38037270,
  38037271,
  38037272,
  38037273,
  38037274,
  38037275,
  38037276,
  38037277,
  38037278,
  38037279,
  38037280,
  38037281,
  38037282,
  38037283,
  38037284,
  38037285,
  38037286,
  38037287,
  38037288,
  38037289,
  38037290,
  38037291,
  38037292,
  38037293,
  38037294,
  38037295,
  38037296,
  38037297,
  38037298,
  38037299
    ];

    try {
        const masterConnection = await connectToSqlServer();
        await masterConnection.query('USE CONTABIL2024');

        for (const id of idsParaExcluir) {
            // Construindo o payload conforme o formato esperado
            const deletePayload = [
                {
                    "idGerado": id.toString(),
                    "conteudo": {
                        "id": id
                    }
                }
            ];

            console.log(JSON.stringify(deletePayload));

            const response = await fetch('https://pessoal.betha.cloud/service-layer/v1/api/classe-referencia', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer 1d12dec7-0720-4b34-a2e5-649610d10806'
                },
                body: JSON.stringify(deletePayload)
            });

            const responseText = await response.text();

            if (response.ok) {
                console.log(`Registro com ID ${id} excluído com sucesso.`);
            } else {
                console.error(`Erro ao excluir o registro com ID ${id}:`, response.statusText, responseText);
            }

            // Registrar a resposta no log
            await logResponse(id, responseText);
        }

    } catch (error) {
        console.error('Erro durante a execução do programa:', error);
    } finally {
        await sql.close();
    }
}

main();